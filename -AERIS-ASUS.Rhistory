getwd()
sample.data <- readClipboard()
sample.data
cars
install.packages("shinythemes")
shiny::runApp('inst/apps/logreg_gui')
runApp()
ui <- navbarPage('',
theme = shinythemes::shinytheme('cerulean'),
tabPanel(title = 'Variable Selection',
fluidPage(title = 'Logistic Regression Tool',
theme = NULL,
sidebarLayout(
sidebarPanel(width = 4,
conditionalPanel('input.dataset === "cars"',
checkboxGroupInput("show_vars", "Columns in cars to show:", names(cars), selected = names(cars))
)
),
mainPanel(plotOutput('mapplot'))
)
)
),
tabPanel('Data',
fluidPage(
mainPanel(width = 12,
DT::dataTableOutput('results'))))
)
runApp()
ui <- navbarPage('',
theme = shinythemes::shinytheme('cerulean'),
tabPanel(title = 'Variable Selection',
fluidPage(title = 'Logistic Regression Tool',
theme = NULL,
sidebarLayout(
sidebarPanel(width = 4,
conditionalPanel('input.dataset === "cars"',
checkboxGroupInput("show_vars", "Columns in cars to show:", names(cars), selected = names(cars))
)
),
mainPanel(plotOutput('mapplot'))
)
)
),
tabPanel('Data',
fluidPage(
mainPanel(width = 12,
DT::dataTableOutput('results'))))
)
cars
stop
pause
break
cars
1
2
3
true
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
cars
git config --global user.email "kaliv_farstryder@hotmail.com"
shiny::runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
colnames(mtcars[[1]])
colnames(mtcars)
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
dataHeaders <- colnames(mtcars)
dataHeaders
mtcars
cars
dataHeaders <- colnames(mtcars$data)
dataHeaders <- colnames(mtcars[[1]])
dataHeaders <- colnames(mtcars)
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
shiny::runApp('inst/apps/logreg_gui')
dataHeaders
runApp('inst/apps/logreg_gui')
var <- paste("mpg ~", colnames(mtcars[c(2,3,4)]), collapse = " + ")
var
var <- paste(c("mpg ~", colnames(mtcars[c(2,3,4)])), collapse = " + ")
var
boxplot(as.formula(var),
data = mpgData,
outline = input$outliers,
col = "#75AADB", pch = 19)
boxplot(as.formula(var),
data = mpgData,
#outline = input$outliers,
col = "#75AADB", pch = 19)
runApp('inst/apps/logreg_gui')
?shiny::fileInput
shiny::runApp('inst/apps/logreg_gui')
install.packages("aod")
library(aod)
newdata
head(cars)
?aod
?glm
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
newData
mtcars
newData
output$newData
df
colnames(mtcars) <- col_headings
colnames(mtcars$data[[1]])
colnames(cars$data[[1]])
colnames(data$cars[[1]])
colnames(cars$[[1]])
colnames(cars$data[[1]])
colnames(cars$data)
colnames(cars)
test1 <- colnames(cars)
test1 <- t(colnames(cars))
View(test1)
test1 <- colnames(cars)
runApp('inst/apps/logreg_gui')
runApp()
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
runApp('inst/apps/logreg_gui')
dataHeaders
runApp('inst/apps/logreg_gui')
shiny::runApp('inst/apps/logreg_gui')
library(readxl)
Test_Data <- read_excel("~/AFIT (PhD)/OPER 782 - Data Science Practice/Test_Data.xlsx")
View(Test_Data)
?glm
mylogit <- glm(transition ~ GDP + IMR + PD + 2YFT + 5YFT, data = Test_Data, family = "binomial")
mylogit <- glm(Transition ~ GDP + IMR + PD + 2YFT + 5YFT, data = Test_Data, family = "binomial")
summary(Test_Data)
mylogit <- glm(Transition ~ GDP + IMR, data = Test_Data, family = "binomial")
mylogit <- glm(Transition ~ GDP + IMR + PD, data = Test_Data, family = "binomial")
mylogit <- glm(Transition ~ GDP + IMR + PD + 2YFT, data = Test_Data, family = "binomial")
mylogit <- glm(Transition ~ GDP + IMR + 2YFT, data = Test_Data, family = "binomial")
library(readxl)
Test_Data <- read_excel("~/AFIT (PhD)/OPER 782 - Data Science Practice/Test_Data.xlsx")
View(Test_Data)
mylogit <- glm(Transition ~ GDP + IMR + PD + FT2Y + FT5Y, data = Test_Data, family = "binomial")
exp(coef(mylogit))
coef(mylogit)
fmla <- coef(mylogit)
logLik(mylogit)
mylogit <- glm(Transition ~ , data = Test_Data, family = "binomial")
mylogit <- glm(Transition, data = Test_Data, family = "binomial")
